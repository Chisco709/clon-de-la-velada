---
const {href, content, id, ariaLabel} = Astro.props
import { DARK_THEME, LIGHT_THEME } from "@/consts/themes"
---

<button id={id} aria-label={ariaLabel}>
	<a href={href}>{content}</a>
</button>

<style>
	button{
		background: transparent;
		border: none;
		padding: 10px 20px;
		display: inline-block;
		font-size: 20px;
		font-weight: 600;
		width: 20rem;
		text-transform: uppercase;
		cursor: pointer;
		transform: skew(-21deg);
		color: var(--color-primary);
		border: 2px solid var(--color-primary);
	}

	button[aria-disabled="true"] {
		background: #666;
		color: #111;
		pointer-events: none;
		border-color: #666;
	}

	button> span {
		display: inline-block;
		transform: skew(21deg);
	}

	button::before {
		content: "";
		position: absolute;
		top: 0;
		bottom: 0;
		right: 100%;
		left: 0;
		background: var(--color-primary);
		opacity: 0;
		z-index: -1;
	}

	button:hover {
		color: var(--color-secondary);
		scale: 1.1;
		transform: skew(-21deg);
	}

	button:hover::before {
		left: 0;
		right: 0;
		opacity: 1;
	}

	@media (prefers-reduced-motion: no-preference) {
		button {
			transition: scale 150ms ease-in-out;
		}

		button::before {
			transition: all 0.5s;
		}
	}
</style>



<script is:inline define:vars={{ darkTheme: DARK_THEME, lightTheme: LIGHT_THEME }}>
	const config = {
		name: "ðŸ¥Š La Velada del AÃ±o 4 - El Evento del AÃ±o",
		description:
			"Â¡Arranca la Velada del AÃ±o!<br><br>Entra a Twitch y no te lo pierdas â†’ [url]https://twitch.tv/ibai[/url]",
		startDate: "2024-07-13",
		endDate: "2024-07-13",
		startTime: "19:00",
		endTime: "22:00",
		options: ["Google", "Apple", "Microsoft365", "MicrosoftTeams"],
		timeZone: "Europe/Madrid",
		trigger: "click",
		iCalFileName: "Reminder-Event",
	}

	let status

	function loadStyle(src) {
		return new Promise((resolve, reject) => {
			const link = document.createElement("link")
			link.href = src
			link.rel = "stylesheet"

			link.onload = () => resolve(link)
			link.onerror = () => reject(new Error(`Style load error for ${src}`))

			document.head.append(link)
		})
	}

	const button = document.querySelector("#add-to-calendar")
	button?.addEventListener("click", async () => {
		console.log('ola');
		if (status === "loading") return

		if (!status) {
			const text = button.innerHTML
			button.innerHTML = "Cargando..."
			status = "loading"
			await Promise.all([import("/public/js/add-to-calendar"), loadStyle("/public/css/add-to-calendar.css")])
			status = "loaded"
			button.innerHTML = text
		}

		config.lightMode = document.documentElement.classList.contains(darkTheme) ? darkTheme : lightTheme

		window.atcb_action(config, button)
	})

	
</script>
