---
import MapMarkerIcon from "@/icons/calendar.astro"
import Typography from "@/components/Typography.astro"
---
<Typography
	as="h2"
	variant="h2"
	color="neutral"
	class:list={"underline-transition mt-6 transition-all duration-300 ease-in-out hover:text-accent"}
>
	<button
		id="add-to-calendar"
		aria-label="agregar al calendario se abrirÃ¡ ventana flotante"
		class="flex text-nowrap uppercase"
	>
		<MapMarkerIcon class="mr-1 max-md:mt-1 md:mt-0.5 md:size-6" /> Agregar al calendario
	</button>
</Typography>

<script is:inline>
	document.addEventListener("astro:page-load", () => {
		const config = {
			name: "ðŸ¥Š La Velada del AÃ±o 4 - El Evento del AÃ±o",
			description:
				"Â¡Arranca la Velada del AÃ±o!<br><br>Entra a Twitch y no te lo pierdas â†’ [url]https://twitch.tv/ibai[/url]",
			startDate: "2024-07-13",
			endDate: "2024-07-13",
			startTime: "19:00",
			endTime: "22:00",
			options: ["Google", "Apple", "Microsoft365", "MicrosoftTeams"],
			timeZone: "Europe/Madrid",
			trigger: "click",
			iCalFileName: "Reminder-Event",
		}

		let status

		function loadStyle(src) {
			return new Promise((resolve, reject) => {
				const link = document.createElement("link")
				link.href = src
				link.rel = "stylesheet"

				link.onload = () => resolve(link)
				link.onerror = () => reject(new Error(`Style load error for ${src}`))

				document.head.append(link)
			})
		}

		const button = document.querySelector("#add-to-calendar")

		const handleClick = async () => {
			if (status === "loading") return

			if (!status) {
				const text = button.innerHTML
				button.innerHTML = "Cargando..."
				status = "loading"
				await Promise.all([import("/js/add-to-calendar.js"), loadStyle("/css/add-to-calendar.css")])
				status = "loaded"
				button.innerHTML = text
			}

			window.atcb_action(config, button)
		}

		button?.addEventListener("click", handleClick)
	})
</script>
<style>
	/* Efecto de subrayado animado */
	.underline-transition {
		width: max-content;
		background-image: linear-gradient(transparent, transparent),
			linear-gradient(var(--color-accent) 20%, var(--color-accent) 80%);
		background-size: 0 3px;
		background-position: 100% 100%;
		background-repeat: no-repeat;
		transition: background-size 0.3s ease-in-out;
	}
	.underline-transition:hover {
		background-size: 100% 3px;
		background-position: 0 100%;
	}
</style>
