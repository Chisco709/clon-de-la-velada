---
import BoxerBigImage from "@/components/BoxerBigImage.astro"
import BoxerClips from "@/components/BoxerClips.astro"
import BoxerDetailInfo from "@/components/BoxerDetailInfo.astro"
import BoxerDetailInfoRival from "@/components/BoxerDetailInfoRival.astro"
import BoxerSocialLink from "@/components/BoxerSocialLink.astro"
import BoxerWorkout from "@/components/BoxerWorkout.astro"
import BoxerGallery from "@/components/Boxers/Gallery.astro"
import SectionTitle from "@/components/SectionTitle.astro"
import BoxerPreviewClips from "@/components/BoxerPreviewClips.astro"

import Instagram from "@/icons/instagram.astro"
import Tiktok from "@/icons/tiktok.astro"
import Twitch from "@/icons/twitch.astro"
import X from "@/icons/x.astro"
import YouTube from "@/icons/youtube.astro"

import { BOXERS } from "@/consts/boxers"
import { COMBATS } from "@/consts/combats"
import { COUNTRIES } from "@/consts/countries"
import { FORECASTS } from "@/consts/forecasts"
import Layout from "@/layouts/Layout.astro"
import CombatSection from "@/sections/Combat.astro"
import Forecasts, { type BoxerWithForecast } from "@/sections/Forecasts.astro"
import type { Boxer } from "@/types/Boxer"
import type { Preload } from "@/types/Preload"

export function getStaticPaths() {
	return BOXERS.map(({ id }) => {
		return { params: { id } }
	})
}

export const prerender = true

const { id } = Astro.params

const [boxer] = BOXERS.filter((boxer) => boxer.id === id)

const combat = COMBATS.find((combat) => combat.boxers.includes(id))

if (!combat) {
	return new Response(JSON.stringify("Combat not found"), { status: 404 })
}

const boxers = BOXERS.filter((boxer) => combat.boxers.includes(boxer.id))

if (!boxers) {
	return new Response(JSON.stringify("Boxers not found"), { status: 404 })
}

const forecast = FORECASTS.find((forecast) => forecast.combatId === combat.id)

const countryName = COUNTRIES[boxer.country]

const boxersWithForecast: BoxerWithForecast[] = []
let forecastCount = 0

let rivals: Boxer[] = []
if (typeof boxer.versus === "object") {
	for (const vs of boxer.versus) {
		rivals = rivals.concat(BOXERS.filter((rival: Boxer) => rival.id === vs))
	}
} else {
	rivals = boxers.filter((rival: Boxer) => rival.id !== boxer.id)
}

if (forecast) {
	forecast.forecastData.forEach((forecastData) => {
		const boxer = boxers.find((boxer) => boxer.id === forecastData.boxerId)
		if (boxer) {
			boxersWithForecast.push({ ...boxer, forecast: forecastData.forecast })
			forecastCount += forecastData.predictionsCount
		}
	})
}

const preloadBoxerImage: Preload[] = [
	{
		as: "image",
		href: `/img/boxers/${id}-big.webp`,
		type: "image/webp",
		rel: "preload",
	},
]

const rivalOrRivals = rivals.length > 1 ? "Rivales" : "Rival"
const guardBoxer = boxer.guard === undefined ? "Desconocida" : boxer.guard
const flagAlt = countryName === undefined ? "un país" : countryName.name
---

<Layout
	description={`Información del luchador ${boxer.name}`}
	title={`${boxer.name} - Información del boxeador de La Velada IV`}
	preload={preloadBoxerImage}
>
<main class="m-auto">
	<section class="">
		<section class="flex flex-wrap items-center justify-center">
			<div
				class="relative bottom-20 flex flex-col items-center justify-center md:w-1/2 lg:mx-4"
			>
				<BoxerBigImage id={id} name={boxer.name} country={boxer.country} />
			</div>
			<section class="mt-20 flex-col flex-wrap items-center justify-center">
				<section>
					<div class="m-5">
						<SectionTitle title="INFORMACIÓN" description="Información personal del boxeador" />
					</div>
					<div class="m-auto flex max-w-md flex-wrap items-center justify-center">
						<BoxerDetailInfo title="Edad" value={boxer.age} id="boxer-edad" />
						<BoxerDetailInfo title="Peso" value={`${boxer.weight} kg.`} id="boxer-peso" />
						<BoxerDetailInfo title="Altura" value={`${boxer.height} m.`} id="boxer-altura" />
					</div>
				</section>
				<div class="mt-10">
					<SectionTitle title="Frases icónicas" description="Frases polémicas dichas por el boxeador" />
				</div>
				<div class="m-auto max-w-sm lg:max-w-md mb-10">
					{(<BoxerPreviewClips clips={boxer.clips} />)}
				</div>
			</section>
		</section>
		<section>
			<div class="m-auto flex flex-col items-center justify-center">
				<div class="m-5">
					<SectionTitle title="REDES SOCIALES" description="Redes sociales del boxeador" />
				</div>
				<div class="flex flex-wrap justify-center gap-2 md:max-w-full">
					<BoxerSocialLink href={boxer.socials.twitch}>
						<Twitch />
					</BoxerSocialLink>
					<BoxerSocialLink href={boxer.socials.instagram}>
						<Instagram />
					</BoxerSocialLink>
					<BoxerSocialLink href={boxer.socials.twitter}>
						<X />
					</BoxerSocialLink>
					<BoxerSocialLink href={boxer.socials.youtube}>
						<YouTube />
					</BoxerSocialLink>
					<BoxerSocialLink href={boxer.socials.tiktok}>
						<Tiktok />
					</BoxerSocialLink>
				</div>
			</div>
		</section>
	</section>

	{
		boxer.workout && (
			<section class="my-44">
				<SectionTitle title="Entrenamiento" description="Preparación para el combate" />

				<BoxerWorkout workout={boxer.workout} />
			</section>
		)
	}

	{forecast && <Forecasts count={forecastCount} boxers={boxersWithForecast} />}
	<CombatSection combatId={combat.id} combatNumber={combat.number} boxers={boxers} />
</main>
</Layout>

<script></script>
